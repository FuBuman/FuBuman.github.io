[{"C:\\Users\\stage\\Desktop\\FuBuman.github.io\\src\\index.js":"1","C:\\Users\\stage\\Desktop\\FuBuman.github.io\\src\\App.js":"2","C:\\Users\\stage\\Desktop\\FuBuman.github.io\\src\\reportWebVitals.js":"3","C:\\Users\\stage\\Desktop\\FuBuman.github.io\\src\\terminal.tsx":"4","C:\\Users\\stage\\Desktop\\FuBuman.github.io\\src\\Terminal.tsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":212,"mtime":1606387497621,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":363,"mtime":1606381944461,"results":"10","hashOfConfig":"7"},{"size":3416,"mtime":1606388438607,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1fjwxpb",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\stage\\Desktop\\FuBuman.github.io\\src\\index.js",[],["25","26"],"C:\\Users\\stage\\Desktop\\FuBuman.github.io\\src\\App.js",["27"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Terminal } from \"./Terminal\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Terminal></Terminal>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\stage\\Desktop\\FuBuman.github.io\\src\\reportWebVitals.js",[],"C:\\Users\\stage\\Desktop\\FuBuman.github.io\\src\\terminal.tsx",["28"],"C:\\Users\\stage\\Desktop\\FuBuman.github.io\\src\\Terminal.tsx",["29","30"],"import { Box, Button, CircularProgress, Fade, LinearProgress, makeStyles, TextField, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    button: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    placeholder: {\r\n        height: 40,\r\n    },\r\n    margin: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\n\r\nexport const Terminal = () => {\r\n    const classes = useStyles();\r\n    const [query, setQuery] = React.useState('idle');\r\n    const [Password, setPassword] = React.useState(\"\");\r\n    const [visible, setvisible] = React.useState(false);\r\n    const timerRef = React.useRef(0);\r\n    const messages = [\"hier könnte dein Text für dein Geochache stehen!\", \"Hier köntne noch viel mehr text stehen, wenn du das willst\"];\r\n\r\n    React.useEffect(\r\n        () => () => {\r\n            clearTimeout(timerRef.current);\r\n        },\r\n        [],\r\n    );\r\n\r\n    const Loader = (props: any) => {\r\n        const { messages } = props;\r\n        // Default to the first message passed\r\n        const [messageIndex, setMessageIndex] = React.useState(0);\r\n\r\n\r\n        React.useEffect(() => {\r\n            // Move on to the next message every `n` milliseconds\r\n            let timeout: any;\r\n            if (messageIndex < messages.length - 1) {\r\n                timeout = setTimeout(() => setMessageIndex(messageIndex + 1), 3000);\r\n            }\r\n\r\n            return () => {\r\n                clearTimeout(timeout);\r\n            };\r\n        }, [messages, messageIndex]);\r\n\r\n        return <div>{messages[messageIndex]}</div>;\r\n    }\r\n\r\n\r\n    const handleClickQuery = () => {\r\n        if (Password !== \"guido\") {\r\n            return\r\n        }\r\n\r\n        clearTimeout(timerRef.current);\r\n\r\n        if (query !== 'idle') {\r\n            setQuery('idle');\r\n            return;\r\n        }\r\n\r\n        setQuery('progress');\r\n        setvisible(true)\r\n        timerRef.current = window.setTimeout(() => {\r\n            setQuery('success');\r\n            setvisible(false)\r\n        }, 10000);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.placeholder}>\r\n                {query === 'success' ? (\r\n                    <Typography>Success!</Typography>\r\n                ) : (\r\n                        <Fade\r\n                            in={query === 'progress'}\r\n                            style={{\r\n                                transitionDelay: query === 'progress' ? '800ms' : '0ms',\r\n                            }}\r\n                            unmountOnExit\r\n                        >\r\n                            <CircularProgress />\r\n                        </Fade>\r\n                    )}\r\n            </div>\r\n            <TextField\r\n                className={classes.margin}\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                onChange={((e) => setPassword(e.target.value))}\r\n            />\r\n            <Button onClick={handleClickQuery} className={classes.button}>\r\n                {query !== 'idle' ? 'Reset' : 'Simulate a load'}\r\n            </Button>\r\n            {visible && <Loader messages={messages} />}\r\n        </div>\r\n    );\r\n}\r\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"40","line":1,"column":10,"nodeType":"37","messageId":"38","endLine":1,"endColumn":13},{"ruleId":"39","severity":1,"message":"40","line":1,"column":10,"nodeType":"37","messageId":"38","endLine":1,"endColumn":13},{"ruleId":"39","severity":1,"message":"41","line":1,"column":47,"nodeType":"37","messageId":"38","endLine":1,"endColumn":61},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'Box' is defined but never used.","'LinearProgress' is defined but never used.","no-global-assign","no-unsafe-negation"]